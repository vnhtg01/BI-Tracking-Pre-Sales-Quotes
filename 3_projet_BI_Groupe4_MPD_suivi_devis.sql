-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS dsid_dwh.client;
DROP TABLE IF EXISTS dsid_dwh.commerciale;
DROP TABLE IF EXISTS dsid_dwh.date;
DROP TABLE IF EXISTS dsid_dwh.faits_devis;
DROP TABLE IF EXISTS dsid_dwh.produit;
DROP TABLE IF EXISTS dsid_dwh.statut_devis;
DROP TABLE IF EXISTS dsid_wrk.suivi_devis_ods_ods;
DROP TABLE IF EXISTS dsid_wrk.suivi_devis_staging_devis;

CREATE TABLE IF NOT EXISTS dsid_dwh.client
(
    id_client_src integer,
    nom_client character varying COLLATE pg_catalog."default",
    ville_client character varying COLLATE pg_catalog."default",
    etat_client character varying COLLATE pg_catalog."default",
    previous_etat_client character varying COLLATE pg_catalog."default",
    scd_start timestamp without time zone,
    scd_end timestamp without time zone,
    scd_active boolean,
    scd_version integer,
    id_client integer NOT NULL DEFAULT nextval('dsid_dwh.client_id_surregatoire_client_seq'::regclass),
    CONSTRAINT pk_client PRIMARY KEY (id_client)
);


CREATE TABLE IF NOT EXISTS dsid_dwh.commerciale
(
    id_commerciale integer NOT NULL DEFAULT nextval('dsid_dwh.commerciale_id_surregatoire_commerciale_seq'::regclass),
    id_commercial_src integer,
    pourcentage_objectif integer,
    nom_commercial character varying COLLATE pg_catalog."default",
    profil character varying COLLATE pg_catalog."default",
    previous_profil character varying COLLATE pg_catalog."default",
    scd_start timestamp without time zone,
    scd_end timestamp without time zone,
    scd_active boolean,
    scd_version integer,
    CONSTRAINT commerciale_pkey PRIMARY KEY (id_commerciale),
    CONSTRAINT commerciale_id_commercial_src_key UNIQUE (id_commercial_src)
);

CREATE TABLE IF NOT EXISTS dsid_dwh.date
(
    id_date serial NOT NULL,
    id_devis integer,
    date_de_creation date,
    date_de_validation date,
    scd_start timestamp without time zone,
    scd_end timestamp without time zone,
    scd_version integer,
    scd_active boolean,
    previous_date_de_validation date,
    CONSTRAINT date_pkey PRIMARY KEY (id_date)
);

CREATE TABLE IF NOT EXISTS dsid_dwh.faits_devis
(
    id_client integer NOT NULL,
    id_commerciale integer NOT NULL,
    id_produit integer NOT NULL,
    montant_total_ht integer NOT NULL,
    montant_total_ttc integer NOT NULL,
    id_statut integer NOT NULL,
    id_fait integer NOT NULL DEFAULT nextval('dsid_dwh.sqe_fait'::regclass),
    id_devis integer,
    id_date integer,
    CONSTRAINT pk_faits_devis PRIMARY KEY (id_fait)
);

CREATE TABLE IF NOT EXISTS dsid_dwh.produit
(
    id_produit integer NOT NULL DEFAULT nextval('dsid_dwh.produit_id_surregatoire_seq'::regclass),
    id_produit_src integer,
    nom_produit character varying COLLATE pg_catalog."default",
    type_prestation character varying COLLATE pg_catalog."default",
    categorie_produit character varying COLLATE pg_catalog."default",
    scd_start timestamp without time zone,
    scd_end timestamp without time zone,
    scd_active boolean,
    scd_version integer,
    CONSTRAINT produit_pkey PRIMARY KEY (id_produit)
);

CREATE TABLE IF NOT EXISTS dsid_dwh.statut_devis
(
    id_statut serial NOT NULL,
    id_devis integer,
    code_statut character varying COLLATE pg_catalog."default",
    libelle_statut character varying COLLATE pg_catalog."default",
    previous_libelle_statut character varying COLLATE pg_catalog."default",
    scd_start timestamp without time zone,
    scd_end timestamp without time zone,
    CONSTRAINT statut_devis_pkey PRIMARY KEY (id_statut)
);

CREATE TABLE IF NOT EXISTS dsid_wrk.suivi_devis_ods
(
    id_devis integer NOT NULL,
    id_client integer,
    id_com integer,
    id_produit integer,
    nom_client character varying(100) COLLATE pg_catalog."default",
    ville_client character varying(100) COLLATE pg_catalog."default",
    etat_client character varying(100) COLLATE pg_catalog."default",
    nom_com character varying(100) COLLATE pg_catalog."default",
    profil_com character varying(100) COLLATE pg_catalog."default",
    pourcentagedatteinte_com integer,
    nom_produit character varying(100) COLLATE pg_catalog."default",
    typepres_produit character varying(100) COLLATE pg_catalog."default",
    categorie_produit character varying(100) COLLATE pg_catalog."default",
    code_statut character varying(100) COLLATE pg_catalog."default",
    libelle_statut character varying(100) COLLATE pg_catalog."default",
    date_crea date,
    date_validation date,
    montant_ht integer,
    montant_ttc integer
);

CREATE TABLE IF NOT EXISTS dsid_wrk.suivi_devis_staging
(
    id_devis integer NOT NULL,
    id_societe integer,
    nom_societe character varying(100) COLLATE pg_catalog."default",
    nom_devis character varying(100) COLLATE pg_catalog."default",
    id_client integer,
    nom_client character varying(100) COLLATE pg_catalog."default",
    rue_adresse_client character varying(100) COLLATE pg_catalog."default",
    rue2_adresse_client character varying(100) COLLATE pg_catalog."default",
    ville_client character varying(100) COLLATE pg_catalog."default",
    code_postal_client character varying(10) COLLATE pg_catalog."default",
    id_etat_client integer,
    etat_client character varying(100) COLLATE pg_catalog."default",
    id_pays_client integer,
    pays_client character varying(100) COLLATE pg_catalog."default",
    id_commercial integer,
    nom_commercial character varying(100) COLLATE pg_catalog."default",
    id_type_prestation integer,
    nom_type_prestation character varying(100) COLLATE pg_catalog."default",
    id_produit integer,
    code_produit character varying(20) COLLATE pg_catalog."default",
    nom_produit character varying(100) COLLATE pg_catalog."default",
    description_ligne_devis character varying(100) COLLATE pg_catalog."default",
    id_categorie_produit integer,
    nom_categorie_produit character varying(100) COLLATE pg_catalog."default",
    code_statut_devis character varying(100) COLLATE pg_catalog."default",
    libelle_statut_devis character varying(100) COLLATE pg_catalog."default",
    date_creation date,
    date_validation date,
    montant_ht numeric(10, 2),
    montant_ttc numeric(10, 2),
    profil_commercial character varying(100) COLLATE pg_catalog."default",
    objectif_total integer NOT NULL,
    objectif_atteint integer NOT NULL,
    pourcentage_atteint integer
);

ALTER TABLE IF EXISTS dsid_dwh.faits_devis
    ADD CONSTRAINT fk_faits_devis_client FOREIGN KEY (id_client)
    REFERENCES dsid_dwh.client (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS dsid_dwh.faits_devis
    ADD CONSTRAINT fk_faits_devis_commercial FOREIGN KEY (id_commerciale)
    REFERENCES dsid_dwh.commerciale (id_commerciale) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS dsid_dwh.faits_devis
    ADD CONSTRAINT fk_faits_devis_date FOREIGN KEY (id_date)
    REFERENCES dsid_dwh.date (id_date) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS dsid_dwh.faits_devis
    ADD CONSTRAINT fk_faits_devis_produit FOREIGN KEY (id_produit)
    REFERENCES dsid_dwh.produit (id_produit) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS dsid_dwh.faits_devis
    ADD CONSTRAINT fk_faits_devis_statut FOREIGN KEY (id_statut)
    REFERENCES dsid_dwh.statut_devis (id_statut) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

DROP SEQUENCE IF EXISTS dsid_dwh.client_id_surregatoire_client_seq;
DROP SEQUENCE IF EXISTS dsid_dwh.commerciale_id_surregatoire_commerciale_seq;
DROP SEQUENCE IF EXISTS dsid_dwh.date_id_date_seq;
DROP SEQUENCE IF EXISTS dsid_dwh.faits_devis_id_statut_seq;
DROP SEQUENCE IF EXISTS dsid_dwh.produit_id_surregatoire_seq;
DROP SEQUENCE IF EXISTS dsid_dwh.sqe_fait;
DROP SEQUENCE IF EXISTS dsid_dwh.statut_devis_id_statut_seq;

CREATE SEQUENCE IF NOT EXISTS dsid_dwh.client_id_surregatoire_client_seq;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.commerciale_id_surregatoire_commerciale_seq;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.date_id_date_seq;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.faits_devis_id_statut_seq;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.produit_id_surregatoire_seq;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.sqe_fait;
CREATE SEQUENCE IF NOT EXISTS dsid_dwh.statut_devis_id_statut_seq;

END;